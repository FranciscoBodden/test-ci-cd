name: Deploy development enviroment 
on:
  workflow_dispatch:
  pull_request:
    branches:
    - main
    paths:
      - .github/workflows/dev.yml
    types: [opened, synchronize, reopened, labeled]

jobs:
  test:
    name: 'Test project'
    runs-on: ubuntu-24.04
    environment: development
    defaults:
      run:
        working-directory: app    
    outputs:
      short_sha: ${{ steps.shorten_sha.outputs.short_sha }}
      image_tag: ${{ steps.image_info.outputs.image_tag }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Node 22
      uses: actions/setup-node@v4
      with:
        node-version: 22

    - name: Clean install modules
      run: npm ci
    
    - name: Unit Testing and Code Coverage
      run: |-
        npm run test:cov
        
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Shorten commit SHA
      id: shorten_sha
      run: |
        SHORTEN_SHA=$(echo "${{ github.head_ref }}" | sha256sum | cut -c 1-5)
        echo "short_sha=$SHORTEN_SHA" >> $GITHUB_OUTPUT

    - name: Setting image info
      id: image_info
      run: |
        echo "image_tag=devsu-test-nodejs-dev-${{ steps.shorten_sha.outputs.short_sha }}" >> $GITHUB_OUTPUT


  build-image:
    name: Build App Image
    runs-on: ubuntu-22.04
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4.5.0

      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: ls dockerfile 
        run: ls app
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: app
          push: true
          tags: app:1.1
          cache-from: type=gha
          cache-to:  type=gha,mode=max

